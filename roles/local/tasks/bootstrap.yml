---

- name: generate bootstrap rbac manifest
  template:
    src: bootstrap_rbac.yml.j2
    dest: "{{dpy_mnf_dir}}/{{bsp_rbac_mnf}}" 

- name: generate bootstrap token pub
  shell: openssl rand -hex 3
  register: res_pub

- name: generate bootstrap token secret
  shell: openssl rand -hex 8
  register: res_secret

- name: generate bootstrap secret manifest
  template:
    src: bootstrap_token.yml.j2
    dest: "{{dpy_mnf_dir}}/{{bsp_mnf}}"
  vars:
    token_pub: "{{res_pub.stdout}}"
    token_secret: "{{res_secret.stdout}}"
    token_desc: "{{cluster_name}} bootstrap token"

- name: generate bootstrap kubeconfig
  shell: |
    kubectl config set-cluster {{cluster_name}} \
      --certificate-authority={{dpy_pki_dir}}/{{client_ca}} \
      --embed-certs=true \
      --server=https://{{lbip}}:6443 \
      --kubeconfig={{dpy_kcf_dir}}/{{bsp_kcf}}

    kubectl config set-context bootstrap@{{cluster_name}} \
      --cluster={{cluster_name}} \
      --user=bootstrap \
      --kubeconfig={{dpy_kcf_dir}}/{{bsp_kcf}}
      
    kubectl config set-credentials bootstrap \
      --token={{res_pub.stdout}}.{{res_secret.stdout}} \
      --kubeconfig={{dpy_kcf_dir}}/{{bsp_kcf}}

    kubectl config use-context bootstrap@{{cluster_name}} \
      --kubeconfig={{dpy_kcf_dir}}/{{bsp_kcf}}
